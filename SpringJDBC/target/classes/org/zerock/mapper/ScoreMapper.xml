<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 메퍼 설정을 위해서 위의 내용은 반드시 필요함 -->

<!-- namespace의 경로는 마이바티스 설정 인터페이스의 경로를 집어 넣습니다. -->
<mapper namespace="org.zerock.mapper.ScoreMapper">
	<!-- 마이바티스는 내부적으로 JDBC의 pstmt를 활용하고, ?를 #{속성}으로 처리 -->
	<!-- id 속성 값은 인터페이스의 메서드의 이름과 동일하게 작성해야 합니다. -->
	<!-- 여러 값을 전달하고 싶다면 1)커멘드 객체를 사용하거나 또는 2) parameterType에 Map을 지정합니다. -->
	<insert id="insert" parameterType="org.zerock.command.ScoreVO" keyProperty="true">
		insert into score01(num, name, kor, eng, math) values(score01_seq.nextval, #{name}, #{kor}, #{eng}, #{math})
	</insert>
	
	<insert id="insert2" parameterType="java.util.Map" keyProperty="true">
		insert into score01(num, name, kor, eng, math) values(score01_seq.nextval, #{p1}, #{p2}, #{p3}, #{p4})
	</insert>
	
	<!-- resultType 속성의 값은 select의 결과를 특정 객체로 만들어서 반환 -->
	<!-- VO에 기술된 멤버변수의 DB의 컬럼명과 정확히 일치해야 합니다. -->
	<select id="select" resultType="org.zerock.command.ScoreVO">
		select * from score01
	</select>
	
	<!-- 단일 값의 매핑은 그냥 처리하면 된다. -->
	<delete id="delete">
		delete from score01 where num = #{num}
	</delete>
</mapper>
  
    
 